<div id="monitorPage">
    <h3 class="ui purple dividing header">
        <i class="dashboard icon"></i>
        <div class="content">
            <%= __('Equipment monitoring') %>
        </div>
    </h3>
    <div class="ui inverted teal small menu" data-bind="foreach: {data: dcs, as: 'dc'}">
        <a class="item" data-bind="css: {'active': $root.selectedDc() == dc.id}">
            <span data-bind="text: dc.name"></span>
            <div class="text" data-bind="text: dc.description"></div>
        </a>
    </div>
    <div class="ui padded grid">
        <div class="ui row">
            <div class="green four wide column">
                Racks list will be here
            </div>
            <div class="teal four wide column">
                Equipment list will be here
            </div>
            <div class="eight wide red column">
                Logs and graphs will be here
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var monitorEqViewModel = function(){
        var self = this;

        this.errors = ko.observableArray();
        this.modalErrors = ko.observableArray();
        this.loading = ko.observable(false);
        this.dcs = ko.observableArray();
        this.selectedDc = ko.observable(false);
        this.racks = ko.observableArray();

        this.selectDc = function(dc){
            var self = this;

            self.selectedDc(dc.id);

        }.bind(this);

        this.loadData = function(){
            var self = this;

            self.loading(true);

            var dcQuery = {sort: 'name'};

            io.socket.get('/datacenter', dcQuery, function(data, jwr){
                if (jwr.statusCode == 200){
                    var dcs = [];

                    if (data !== undefined && data.length > 0){
                        $.each(data, function(index, item){
                            item.errors = ko.observable(0);
                            item.warning = ko.observable(0);
                            dcs.push(ko.observable(item));
                            if (self.selectedDc() === false){
                                self.selectedDc(item.id);
                            }
                        });
                    }

                    self.dcs(dcs);
                } else {
                    self.errors.push('ERROR: ' + jwr.statusCode);
                }
            });


        }.bind(this);

        self.loadData();

        io.socket.on('connect', function(){
            io.socket.get('/equipment');
            io.socket.get('/notifications/subscribe/statusUpdates');
        });

        io.socket.on('statusUpdates',function(obj){
          if (obj.verb == 'updated') {
            var previous = obj.previous;
            var data = obj.data;
            console.log(obj);
          } else if (obj.verb == 'messaged') {
            console.log(obj);
          } else {
            console.log(obj);
          }
        });
    };

    ko.applyBindings(new monitorEqViewModel(), document.getElementById("monitorPage"));
</script>
